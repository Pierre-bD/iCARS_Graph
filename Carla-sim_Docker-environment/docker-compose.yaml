version: '3.8'

services:

  # Carla server container
  carla:
    image: carlasim/carla:0.9.13
    #container_name: carla_server
    runtime: nvidia
    #ports:
    #  - 2000-2002:2000-2002
    #command: /bin/bash -c "./CarlaUE4.sh -nosound -carla-server -RenderOffscreen"
    command: ["bash", "./CarlaUE4.sh", "-nosound", "-carla-server" ,"-RenderOffscreen"]
    
    environment:
      - DISPLAY=${DISPLAY}
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      - QT_X11_NO_MITSHM=1 # Fix a bug with QT
      - SDL_VIDEODRIVER=x11
    user: ${UID}
    volumes:
      - ${HOME}/.Xauthority:/root/.Xauthority:rw
      - /tmp/.X11-unix:/tmp/.X11-unix
      - /etc/group:/etc/group:ro
      - /etc/passwd:/etc/passwd:ro
      - /etc/shadow:/etc/shadow:ro
      - /etc/sudoers:/etc/sudoers:ro
      - /etc/sudoers.d:/etc/sudoers.d:ro
      - /home/${USER}:/home/${USER}:rw #share your home with write permissions
    privileged: true
    network_mode: "host"
    stdin_open: true
    tty: true

  # Carla ROS bridge container
  bridge:
    build:
      context: ./docker/ros_carla_bridge/
      dockerfile: Dockerfile
    image: carla_bridge:latest
    container_name: carla_bridge
    command: ros2 launch carla_ros_bridge carla_ros_bridge.launch.py host:=localhost timeout:=5
    runtime: nvidia
    restart: always
    depends_on: 
      carla:
        condition: service_started

  # foxglove to visualize live data 
  #foxglove_bridge:
  #  build:
  #    context: ./docker/foxglove_bridge/
  #    dockerfile: Dockerfile
   # image: carla_ros_simulation-main-foxglove_bridge:latest
   # ports:
   #   - 8765:8765
   # container_name: foxglove_bridge
   # command: ros2 launch foxglove_bridge foxglove_bridge_launch.xml port:=8765
   # restart: always
   # depends_on: 
   #   bridge:
   #     condition: service_started

  # Example ros talker node
 # ros_talker:
 #   image: osrf/ros:foxy-desktop
 #   command: ros2 run demo_nodes_cpp talker

   # Example ros listener node
 # ros_listener:
 #   image: osrf/ros:foxy-desktop
 #   command: ros2 run demo_nodes_cpp listener
 #   depends_on:
 #     - ros_talker
